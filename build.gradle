/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */


plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'application'
    id("com.diffplug.spotless") version "6.25.0"
}

spotless {
encoding 'UTF-8'
format 'misc', {
    target '*.gradle', '.gitattributes', '.gitignore'
    trimTrailingWhitespace()
    indentWithSpaces(4) // or spaces. Takes an integer argument if you don't like 4
    endWithNewline()
}
java {
    importOrderFile('spotless.importorder')
    removeUnusedImports()
    eclipse('4.19').configFile('spotless.eclipseformat.xml')
    formatAnnotations()
    licenseHeader '/* (C)$YEAR */'
}
}

task unpack(type: Copy) {
    dependsOn 'shadowJar'
    dependsOn 'distZip'
    dependsOn 'shadowDistTar'
    dependsOn 'distTar'
    dependsOn 'shadowDistZip'
    shouldRunAfter 'build'
    from files("$buildDir/distributions")
    into "$buildDir/unpacked"
    filesMatching '*shadow.zip', { zipDetails ->
        copy {
            from zipTree(zipDetails.file)
            into destinationDir
        }
        zipDetails.exclude()
    }
    delete(fileTree(dir: '$buildDir/unpacked', include: "**.zip"))
}

compileJava {
    dependsOn 'spotlessApply'
}

build{
    dependsOn 'unpack'
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation libs.guava
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0'
    implementation 'com.formdev:flatlaf:3.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.hansbald.flowgui.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
